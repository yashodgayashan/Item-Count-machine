
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005e  00800060  000007a6  0000083a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000f  008000be  008000be  00000898  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000898  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000904  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014e9  00000000  00000000  000009bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007d7  00000000  00000000  00001ea5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a28  00000000  00000000  0000267c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000019c  00000000  00000000  000030a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000049f  00000000  00000000  00003240  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000961  00000000  00000000  000036df  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00004040  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 be 02 	jmp	0x57c	; 0x57c <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ea       	ldi	r30, 0xA6	; 166
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 3b       	cpi	r26, 0xBE	; 190
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ae eb       	ldi	r26, 0xBE	; 190
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ad 3c       	cpi	r26, 0xCD	; 205
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 47 03 	call	0x68e	; 0x68e <main>
  8a:	0c 94 d1 03 	jmp	0x7a2	; 0x7a2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pinChange>:
void lightOn(){
	PORTA |=(1<<PINA1);
}

void lightOff(){
	PORTA &=~(1<<PINA1);
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <pinChange+0x6>
  96:	9f c0       	rjmp	.+318    	; 0x1d6 <pinChange+0x144>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	11 f4       	brne	.+4      	; 0xa0 <pinChange+0xe>
  9c:	d8 98       	cbi	0x1b, 0	; 27
  9e:	08 95       	ret
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	91 05       	cpc	r25, r1
  a4:	11 f4       	brne	.+4      	; 0xaa <pinChange+0x18>
  a6:	d9 98       	cbi	0x1b, 1	; 27
  a8:	08 95       	ret
  aa:	82 30       	cpi	r24, 0x02	; 2
  ac:	91 05       	cpc	r25, r1
  ae:	11 f4       	brne	.+4      	; 0xb4 <pinChange+0x22>
  b0:	da 98       	cbi	0x1b, 2	; 27
  b2:	08 95       	ret
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	91 05       	cpc	r25, r1
  b8:	11 f4       	brne	.+4      	; 0xbe <pinChange+0x2c>
  ba:	db 98       	cbi	0x1b, 3	; 27
  bc:	08 95       	ret
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	91 05       	cpc	r25, r1
  c2:	11 f4       	brne	.+4      	; 0xc8 <pinChange+0x36>
  c4:	dc 98       	cbi	0x1b, 4	; 27
  c6:	08 95       	ret
  c8:	85 30       	cpi	r24, 0x05	; 5
  ca:	91 05       	cpc	r25, r1
  cc:	11 f4       	brne	.+4      	; 0xd2 <pinChange+0x40>
  ce:	dd 98       	cbi	0x1b, 5	; 27
  d0:	08 95       	ret
  d2:	86 30       	cpi	r24, 0x06	; 6
  d4:	91 05       	cpc	r25, r1
  d6:	11 f4       	brne	.+4      	; 0xdc <pinChange+0x4a>
  d8:	de 98       	cbi	0x1b, 6	; 27
  da:	08 95       	ret
  dc:	87 30       	cpi	r24, 0x07	; 7
  de:	91 05       	cpc	r25, r1
  e0:	11 f4       	brne	.+4      	; 0xe6 <pinChange+0x54>
  e2:	df 98       	cbi	0x1b, 7	; 27
  e4:	08 95       	ret
  e6:	8a 30       	cpi	r24, 0x0A	; 10
  e8:	91 05       	cpc	r25, r1
  ea:	11 f4       	brne	.+4      	; 0xf0 <pinChange+0x5e>
  ec:	c0 98       	cbi	0x18, 0	; 24
  ee:	08 95       	ret
  f0:	8b 30       	cpi	r24, 0x0B	; 11
  f2:	91 05       	cpc	r25, r1
  f4:	11 f4       	brne	.+4      	; 0xfa <pinChange+0x68>
  f6:	c1 98       	cbi	0x18, 1	; 24
  f8:	08 95       	ret
  fa:	8c 30       	cpi	r24, 0x0C	; 12
  fc:	91 05       	cpc	r25, r1
  fe:	11 f4       	brne	.+4      	; 0x104 <pinChange+0x72>
 100:	c2 98       	cbi	0x18, 2	; 24
 102:	08 95       	ret
 104:	8d 30       	cpi	r24, 0x0D	; 13
 106:	91 05       	cpc	r25, r1
 108:	11 f4       	brne	.+4      	; 0x10e <pinChange+0x7c>
 10a:	c3 98       	cbi	0x18, 3	; 24
 10c:	08 95       	ret
 10e:	8e 30       	cpi	r24, 0x0E	; 14
 110:	91 05       	cpc	r25, r1
 112:	11 f4       	brne	.+4      	; 0x118 <pinChange+0x86>
 114:	c4 98       	cbi	0x18, 4	; 24
 116:	08 95       	ret
 118:	8f 30       	cpi	r24, 0x0F	; 15
 11a:	91 05       	cpc	r25, r1
 11c:	11 f4       	brne	.+4      	; 0x122 <pinChange+0x90>
 11e:	c5 98       	cbi	0x18, 5	; 24
 120:	08 95       	ret
 122:	80 31       	cpi	r24, 0x10	; 16
 124:	91 05       	cpc	r25, r1
 126:	11 f4       	brne	.+4      	; 0x12c <pinChange+0x9a>
 128:	c6 98       	cbi	0x18, 6	; 24
 12a:	08 95       	ret
 12c:	81 31       	cpi	r24, 0x11	; 17
 12e:	91 05       	cpc	r25, r1
 130:	11 f4       	brne	.+4      	; 0x136 <pinChange+0xa4>
 132:	c7 98       	cbi	0x18, 7	; 24
 134:	08 95       	ret
 136:	84 31       	cpi	r24, 0x14	; 20
 138:	91 05       	cpc	r25, r1
 13a:	11 f4       	brne	.+4      	; 0x140 <pinChange+0xae>
 13c:	a8 98       	cbi	0x15, 0	; 21
 13e:	08 95       	ret
 140:	85 31       	cpi	r24, 0x15	; 21
 142:	91 05       	cpc	r25, r1
 144:	11 f4       	brne	.+4      	; 0x14a <pinChange+0xb8>
 146:	a9 98       	cbi	0x15, 1	; 21
 148:	08 95       	ret
 14a:	86 31       	cpi	r24, 0x16	; 22
 14c:	91 05       	cpc	r25, r1
 14e:	11 f4       	brne	.+4      	; 0x154 <pinChange+0xc2>
 150:	aa 98       	cbi	0x15, 2	; 21
 152:	08 95       	ret
 154:	87 31       	cpi	r24, 0x17	; 23
 156:	91 05       	cpc	r25, r1
 158:	11 f4       	brne	.+4      	; 0x15e <pinChange+0xcc>
 15a:	ab 98       	cbi	0x15, 3	; 21
 15c:	08 95       	ret
 15e:	88 31       	cpi	r24, 0x18	; 24
 160:	91 05       	cpc	r25, r1
 162:	11 f4       	brne	.+4      	; 0x168 <pinChange+0xd6>
 164:	ac 98       	cbi	0x15, 4	; 21
 166:	08 95       	ret
 168:	89 31       	cpi	r24, 0x19	; 25
 16a:	91 05       	cpc	r25, r1
 16c:	11 f4       	brne	.+4      	; 0x172 <pinChange+0xe0>
 16e:	ad 98       	cbi	0x15, 5	; 21
 170:	08 95       	ret
 172:	8a 31       	cpi	r24, 0x1A	; 26
 174:	91 05       	cpc	r25, r1
 176:	11 f4       	brne	.+4      	; 0x17c <pinChange+0xea>
 178:	ae 98       	cbi	0x15, 6	; 21
 17a:	08 95       	ret
 17c:	8b 31       	cpi	r24, 0x1B	; 27
 17e:	91 05       	cpc	r25, r1
 180:	11 f4       	brne	.+4      	; 0x186 <pinChange+0xf4>
 182:	af 98       	cbi	0x15, 7	; 21
 184:	08 95       	ret
 186:	8e 31       	cpi	r24, 0x1E	; 30
 188:	91 05       	cpc	r25, r1
 18a:	11 f4       	brne	.+4      	; 0x190 <pinChange+0xfe>
 18c:	90 98       	cbi	0x12, 0	; 18
 18e:	08 95       	ret
 190:	8f 31       	cpi	r24, 0x1F	; 31
 192:	91 05       	cpc	r25, r1
 194:	11 f4       	brne	.+4      	; 0x19a <pinChange+0x108>
 196:	91 98       	cbi	0x12, 1	; 18
 198:	08 95       	ret
 19a:	80 32       	cpi	r24, 0x20	; 32
 19c:	91 05       	cpc	r25, r1
 19e:	11 f4       	brne	.+4      	; 0x1a4 <pinChange+0x112>
 1a0:	92 98       	cbi	0x12, 2	; 18
 1a2:	08 95       	ret
 1a4:	81 32       	cpi	r24, 0x21	; 33
 1a6:	91 05       	cpc	r25, r1
 1a8:	11 f4       	brne	.+4      	; 0x1ae <pinChange+0x11c>
 1aa:	93 98       	cbi	0x12, 3	; 18
 1ac:	08 95       	ret
 1ae:	82 32       	cpi	r24, 0x22	; 34
 1b0:	91 05       	cpc	r25, r1
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <pinChange+0x126>
 1b4:	94 98       	cbi	0x12, 4	; 18
 1b6:	08 95       	ret
 1b8:	83 32       	cpi	r24, 0x23	; 35
 1ba:	91 05       	cpc	r25, r1
 1bc:	11 f4       	brne	.+4      	; 0x1c2 <pinChange+0x130>
 1be:	95 98       	cbi	0x12, 5	; 18
 1c0:	08 95       	ret
 1c2:	84 32       	cpi	r24, 0x24	; 36
 1c4:	91 05       	cpc	r25, r1
 1c6:	11 f4       	brne	.+4      	; 0x1cc <pinChange+0x13a>
 1c8:	96 98       	cbi	0x12, 6	; 18
 1ca:	08 95       	ret
 1cc:	85 97       	sbiw	r24, 0x25	; 37
 1ce:	09 f0       	breq	.+2      	; 0x1d2 <pinChange+0x140>
 1d0:	9f c0       	rjmp	.+318    	; 0x310 <pinChange+0x27e>
 1d2:	97 98       	cbi	0x12, 7	; 18
 1d4:	08 95       	ret
 1d6:	00 97       	sbiw	r24, 0x00	; 0
 1d8:	11 f4       	brne	.+4      	; 0x1de <pinChange+0x14c>
 1da:	d8 9a       	sbi	0x1b, 0	; 27
 1dc:	08 95       	ret
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	91 05       	cpc	r25, r1
 1e2:	11 f4       	brne	.+4      	; 0x1e8 <pinChange+0x156>
 1e4:	d9 9a       	sbi	0x1b, 1	; 27
 1e6:	08 95       	ret
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	91 05       	cpc	r25, r1
 1ec:	11 f4       	brne	.+4      	; 0x1f2 <pinChange+0x160>
 1ee:	da 9a       	sbi	0x1b, 2	; 27
 1f0:	08 95       	ret
 1f2:	83 30       	cpi	r24, 0x03	; 3
 1f4:	91 05       	cpc	r25, r1
 1f6:	11 f4       	brne	.+4      	; 0x1fc <pinChange+0x16a>
 1f8:	db 9a       	sbi	0x1b, 3	; 27
 1fa:	08 95       	ret
 1fc:	84 30       	cpi	r24, 0x04	; 4
 1fe:	91 05       	cpc	r25, r1
 200:	11 f4       	brne	.+4      	; 0x206 <pinChange+0x174>
 202:	dc 9a       	sbi	0x1b, 4	; 27
 204:	08 95       	ret
 206:	85 30       	cpi	r24, 0x05	; 5
 208:	91 05       	cpc	r25, r1
 20a:	11 f4       	brne	.+4      	; 0x210 <pinChange+0x17e>
 20c:	dd 9a       	sbi	0x1b, 5	; 27
 20e:	08 95       	ret
 210:	86 30       	cpi	r24, 0x06	; 6
 212:	91 05       	cpc	r25, r1
 214:	11 f4       	brne	.+4      	; 0x21a <pinChange+0x188>
 216:	de 9a       	sbi	0x1b, 6	; 27
 218:	08 95       	ret
 21a:	87 30       	cpi	r24, 0x07	; 7
 21c:	91 05       	cpc	r25, r1
 21e:	11 f4       	brne	.+4      	; 0x224 <pinChange+0x192>
 220:	df 9a       	sbi	0x1b, 7	; 27
 222:	08 95       	ret
 224:	8a 30       	cpi	r24, 0x0A	; 10
 226:	91 05       	cpc	r25, r1
 228:	11 f4       	brne	.+4      	; 0x22e <pinChange+0x19c>
 22a:	c0 9a       	sbi	0x18, 0	; 24
 22c:	08 95       	ret
 22e:	8b 30       	cpi	r24, 0x0B	; 11
 230:	91 05       	cpc	r25, r1
 232:	11 f4       	brne	.+4      	; 0x238 <pinChange+0x1a6>
 234:	c1 9a       	sbi	0x18, 1	; 24
 236:	08 95       	ret
 238:	8c 30       	cpi	r24, 0x0C	; 12
 23a:	91 05       	cpc	r25, r1
 23c:	11 f4       	brne	.+4      	; 0x242 <pinChange+0x1b0>
 23e:	c2 9a       	sbi	0x18, 2	; 24
 240:	08 95       	ret
 242:	8d 30       	cpi	r24, 0x0D	; 13
 244:	91 05       	cpc	r25, r1
 246:	11 f4       	brne	.+4      	; 0x24c <pinChange+0x1ba>
 248:	c3 9a       	sbi	0x18, 3	; 24
 24a:	08 95       	ret
 24c:	8e 30       	cpi	r24, 0x0E	; 14
 24e:	91 05       	cpc	r25, r1
 250:	11 f4       	brne	.+4      	; 0x256 <pinChange+0x1c4>
 252:	c4 9a       	sbi	0x18, 4	; 24
 254:	08 95       	ret
 256:	8f 30       	cpi	r24, 0x0F	; 15
 258:	91 05       	cpc	r25, r1
 25a:	11 f4       	brne	.+4      	; 0x260 <pinChange+0x1ce>
 25c:	c5 9a       	sbi	0x18, 5	; 24
 25e:	08 95       	ret
 260:	80 31       	cpi	r24, 0x10	; 16
 262:	91 05       	cpc	r25, r1
 264:	11 f4       	brne	.+4      	; 0x26a <pinChange+0x1d8>
 266:	c6 9a       	sbi	0x18, 6	; 24
 268:	08 95       	ret
 26a:	81 31       	cpi	r24, 0x11	; 17
 26c:	91 05       	cpc	r25, r1
 26e:	11 f4       	brne	.+4      	; 0x274 <pinChange+0x1e2>
 270:	c7 9a       	sbi	0x18, 7	; 24
 272:	08 95       	ret
 274:	84 31       	cpi	r24, 0x14	; 20
 276:	91 05       	cpc	r25, r1
 278:	11 f4       	brne	.+4      	; 0x27e <pinChange+0x1ec>
 27a:	a8 9a       	sbi	0x15, 0	; 21
 27c:	08 95       	ret
 27e:	85 31       	cpi	r24, 0x15	; 21
 280:	91 05       	cpc	r25, r1
 282:	11 f4       	brne	.+4      	; 0x288 <pinChange+0x1f6>
 284:	a9 9a       	sbi	0x15, 1	; 21
 286:	08 95       	ret
 288:	86 31       	cpi	r24, 0x16	; 22
 28a:	91 05       	cpc	r25, r1
 28c:	11 f4       	brne	.+4      	; 0x292 <pinChange+0x200>
 28e:	aa 9a       	sbi	0x15, 2	; 21
 290:	08 95       	ret
 292:	87 31       	cpi	r24, 0x17	; 23
 294:	91 05       	cpc	r25, r1
 296:	11 f4       	brne	.+4      	; 0x29c <pinChange+0x20a>
 298:	ab 9a       	sbi	0x15, 3	; 21
 29a:	08 95       	ret
 29c:	88 31       	cpi	r24, 0x18	; 24
 29e:	91 05       	cpc	r25, r1
 2a0:	11 f4       	brne	.+4      	; 0x2a6 <pinChange+0x214>
 2a2:	ac 9a       	sbi	0x15, 4	; 21
 2a4:	08 95       	ret
 2a6:	89 31       	cpi	r24, 0x19	; 25
 2a8:	91 05       	cpc	r25, r1
 2aa:	11 f4       	brne	.+4      	; 0x2b0 <pinChange+0x21e>
 2ac:	ad 9a       	sbi	0x15, 5	; 21
 2ae:	08 95       	ret
 2b0:	8a 31       	cpi	r24, 0x1A	; 26
 2b2:	91 05       	cpc	r25, r1
 2b4:	11 f4       	brne	.+4      	; 0x2ba <pinChange+0x228>
 2b6:	ae 9a       	sbi	0x15, 6	; 21
 2b8:	08 95       	ret
 2ba:	8b 31       	cpi	r24, 0x1B	; 27
 2bc:	91 05       	cpc	r25, r1
 2be:	11 f4       	brne	.+4      	; 0x2c4 <pinChange+0x232>
 2c0:	af 9a       	sbi	0x15, 7	; 21
 2c2:	08 95       	ret
 2c4:	8e 31       	cpi	r24, 0x1E	; 30
 2c6:	91 05       	cpc	r25, r1
 2c8:	11 f4       	brne	.+4      	; 0x2ce <pinChange+0x23c>
 2ca:	90 9a       	sbi	0x12, 0	; 18
 2cc:	08 95       	ret
 2ce:	8f 31       	cpi	r24, 0x1F	; 31
 2d0:	91 05       	cpc	r25, r1
 2d2:	11 f4       	brne	.+4      	; 0x2d8 <pinChange+0x246>
 2d4:	91 9a       	sbi	0x12, 1	; 18
 2d6:	08 95       	ret
 2d8:	80 32       	cpi	r24, 0x20	; 32
 2da:	91 05       	cpc	r25, r1
 2dc:	11 f4       	brne	.+4      	; 0x2e2 <pinChange+0x250>
 2de:	92 9a       	sbi	0x12, 2	; 18
 2e0:	08 95       	ret
 2e2:	81 32       	cpi	r24, 0x21	; 33
 2e4:	91 05       	cpc	r25, r1
 2e6:	11 f4       	brne	.+4      	; 0x2ec <pinChange+0x25a>
 2e8:	93 9a       	sbi	0x12, 3	; 18
 2ea:	08 95       	ret
 2ec:	82 32       	cpi	r24, 0x22	; 34
 2ee:	91 05       	cpc	r25, r1
 2f0:	11 f4       	brne	.+4      	; 0x2f6 <pinChange+0x264>
 2f2:	94 9a       	sbi	0x12, 4	; 18
 2f4:	08 95       	ret
 2f6:	83 32       	cpi	r24, 0x23	; 35
 2f8:	91 05       	cpc	r25, r1
 2fa:	11 f4       	brne	.+4      	; 0x300 <pinChange+0x26e>
 2fc:	95 9a       	sbi	0x12, 5	; 18
 2fe:	08 95       	ret
 300:	84 32       	cpi	r24, 0x24	; 36
 302:	91 05       	cpc	r25, r1
 304:	11 f4       	brne	.+4      	; 0x30a <pinChange+0x278>
 306:	96 9a       	sbi	0x12, 6	; 18
 308:	08 95       	ret
 30a:	85 97       	sbiw	r24, 0x25	; 37
 30c:	09 f4       	brne	.+2      	; 0x310 <pinChange+0x27e>
 30e:	97 9a       	sbi	0x12, 7	; 18
 310:	08 95       	ret

00000312 <Lcd4_Port>:
 312:	cf 93       	push	r28
 314:	c8 2f       	mov	r28, r24
 316:	80 ff       	sbrs	r24, 0
 318:	07 c0       	rjmp	.+14     	; 0x328 <Lcd4_Port+0x16>
 31a:	61 e0       	ldi	r22, 0x01	; 1
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	88 e1       	ldi	r24, 0x18	; 24
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 326:	06 c0       	rjmp	.+12     	; 0x334 <Lcd4_Port+0x22>
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	88 e1       	ldi	r24, 0x18	; 24
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 334:	c1 ff       	sbrs	r28, 1
 336:	07 c0       	rjmp	.+14     	; 0x346 <Lcd4_Port+0x34>
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	89 e1       	ldi	r24, 0x19	; 25
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 344:	06 c0       	rjmp	.+12     	; 0x352 <Lcd4_Port+0x40>
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	89 e1       	ldi	r24, 0x19	; 25
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 352:	c2 ff       	sbrs	r28, 2
 354:	07 c0       	rjmp	.+14     	; 0x364 <Lcd4_Port+0x52>
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	8a e1       	ldi	r24, 0x1A	; 26
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 362:	06 c0       	rjmp	.+12     	; 0x370 <Lcd4_Port+0x5e>
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	8a e1       	ldi	r24, 0x1A	; 26
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 370:	c3 ff       	sbrs	r28, 3
 372:	07 c0       	rjmp	.+14     	; 0x382 <Lcd4_Port+0x70>
 374:	61 e0       	ldi	r22, 0x01	; 1
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	8b e1       	ldi	r24, 0x1B	; 27
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 380:	06 c0       	rjmp	.+12     	; 0x38e <Lcd4_Port+0x7c>
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	8b e1       	ldi	r24, 0x1B	; 27
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 38e:	cf 91       	pop	r28
 390:	08 95       	ret

00000392 <Lcd4_Cmd>:
 392:	cf 93       	push	r28
 394:	c8 2f       	mov	r28, r24
 396:	60 e0       	ldi	r22, 0x00	; 0
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	84 e1       	ldi	r24, 0x14	; 20
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3a2:	8c 2f       	mov	r24, r28
 3a4:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 3a8:	61 e0       	ldi	r22, 0x01	; 1
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	85 e1       	ldi	r24, 0x15	; 21
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3b4:	89 ef       	ldi	r24, 0xF9	; 249
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <Lcd4_Cmd+0x26>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <Lcd4_Cmd+0x2c>
 3be:	00 00       	nop
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	85 e1       	ldi	r24, 0x15	; 21
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3cc:	89 ef       	ldi	r24, 0xF9	; 249
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	01 97       	sbiw	r24, 0x01	; 1
 3d2:	f1 f7       	brne	.-4      	; 0x3d0 <Lcd4_Cmd+0x3e>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <Lcd4_Cmd+0x44>
 3d6:	00 00       	nop
 3d8:	cf 91       	pop	r28
 3da:	08 95       	ret

000003dc <Lcd4_Clear>:
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3e8:	08 95       	ret

000003ea <Lcd4_Set_Cursor>:
 3ea:	cf 93       	push	r28
 3ec:	c6 2f       	mov	r28, r22
 3ee:	81 30       	cpi	r24, 0x01	; 1
 3f0:	59 f4       	brne	.+22     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3f2:	80 e8       	ldi	r24, 0x80	; 128
 3f4:	86 0f       	add	r24, r22
 3f6:	82 95       	swap	r24
 3f8:	8f 70       	andi	r24, 0x0F	; 15
 3fa:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3fe:	8c 2f       	mov	r24, r28
 400:	8f 70       	andi	r24, 0x0F	; 15
 402:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 406:	0c c0       	rjmp	.+24     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 408:	82 30       	cpi	r24, 0x02	; 2
 40a:	51 f4       	brne	.+20     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 40c:	80 ec       	ldi	r24, 0xC0	; 192
 40e:	86 0f       	add	r24, r22
 410:	82 95       	swap	r24
 412:	8f 70       	andi	r24, 0x0F	; 15
 414:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 418:	8c 2f       	mov	r24, r28
 41a:	8f 70       	andi	r24, 0x0F	; 15
 41c:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 420:	cf 91       	pop	r28
 422:	08 95       	ret

00000424 <Lcd4_Init>:
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 42a:	87 e8       	ldi	r24, 0x87	; 135
 42c:	93 e1       	ldi	r25, 0x13	; 19
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <Lcd4_Init+0xa>
 432:	00 c0       	rjmp	.+0      	; 0x434 <Lcd4_Init+0x10>
 434:	00 00       	nop
 436:	83 e0       	ldi	r24, 0x03	; 3
 438:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 43c:	81 ee       	ldi	r24, 0xE1	; 225
 43e:	94 e0       	ldi	r25, 0x04	; 4
 440:	01 97       	sbiw	r24, 0x01	; 1
 442:	f1 f7       	brne	.-4      	; 0x440 <Lcd4_Init+0x1c>
 444:	00 c0       	rjmp	.+0      	; 0x446 <Lcd4_Init+0x22>
 446:	00 00       	nop
 448:	83 e0       	ldi	r24, 0x03	; 3
 44a:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 44e:	8d eb       	ldi	r24, 0xBD	; 189
 450:	9a e0       	ldi	r25, 0x0A	; 10
 452:	01 97       	sbiw	r24, 0x01	; 1
 454:	f1 f7       	brne	.-4      	; 0x452 <Lcd4_Init+0x2e>
 456:	00 c0       	rjmp	.+0      	; 0x458 <Lcd4_Init+0x34>
 458:	00 00       	nop
 45a:	83 e0       	ldi	r24, 0x03	; 3
 45c:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 460:	82 e0       	ldi	r24, 0x02	; 2
 462:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 466:	82 e0       	ldi	r24, 0x02	; 2
 468:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 46c:	88 e0       	ldi	r24, 0x08	; 8
 46e:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 472:	80 e0       	ldi	r24, 0x00	; 0
 474:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 478:	8c e0       	ldi	r24, 0x0C	; 12
 47a:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 47e:	80 e0       	ldi	r24, 0x00	; 0
 480:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 484:	86 e0       	ldi	r24, 0x06	; 6
 486:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 48a:	08 95       	ret

0000048c <Lcd4_Write_Char>:
 48c:	cf 93       	push	r28
 48e:	c8 2f       	mov	r28, r24
 490:	61 e0       	ldi	r22, 0x01	; 1
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	84 e1       	ldi	r24, 0x14	; 20
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 49c:	8c 2f       	mov	r24, r28
 49e:	82 95       	swap	r24
 4a0:	8f 70       	andi	r24, 0x0F	; 15
 4a2:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 4a6:	61 e0       	ldi	r22, 0x01	; 1
 4a8:	70 e0       	ldi	r23, 0x00	; 0
 4aa:	85 e1       	ldi	r24, 0x15	; 21
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4b2:	89 ef       	ldi	r24, 0xF9	; 249
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	01 97       	sbiw	r24, 0x01	; 1
 4b8:	f1 f7       	brne	.-4      	; 0x4b6 <Lcd4_Write_Char+0x2a>
 4ba:	00 c0       	rjmp	.+0      	; 0x4bc <Lcd4_Write_Char+0x30>
 4bc:	00 00       	nop
 4be:	60 e0       	ldi	r22, 0x00	; 0
 4c0:	70 e0       	ldi	r23, 0x00	; 0
 4c2:	85 e1       	ldi	r24, 0x15	; 21
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4ca:	89 ef       	ldi	r24, 0xF9	; 249
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	01 97       	sbiw	r24, 0x01	; 1
 4d0:	f1 f7       	brne	.-4      	; 0x4ce <Lcd4_Write_Char+0x42>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <Lcd4_Write_Char+0x48>
 4d4:	00 00       	nop
 4d6:	8c 2f       	mov	r24, r28
 4d8:	8f 70       	andi	r24, 0x0F	; 15
 4da:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 4de:	61 e0       	ldi	r22, 0x01	; 1
 4e0:	70 e0       	ldi	r23, 0x00	; 0
 4e2:	85 e1       	ldi	r24, 0x15	; 21
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4ea:	89 ef       	ldi	r24, 0xF9	; 249
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	01 97       	sbiw	r24, 0x01	; 1
 4f0:	f1 f7       	brne	.-4      	; 0x4ee <Lcd4_Write_Char+0x62>
 4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <Lcd4_Write_Char+0x68>
 4f4:	00 00       	nop
 4f6:	60 e0       	ldi	r22, 0x00	; 0
 4f8:	70 e0       	ldi	r23, 0x00	; 0
 4fa:	85 e1       	ldi	r24, 0x15	; 21
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 502:	89 ef       	ldi	r24, 0xF9	; 249
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	01 97       	sbiw	r24, 0x01	; 1
 508:	f1 f7       	brne	.-4      	; 0x506 <Lcd4_Write_Char+0x7a>
 50a:	00 c0       	rjmp	.+0      	; 0x50c <Lcd4_Write_Char+0x80>
 50c:	00 00       	nop
 50e:	cf 91       	pop	r28
 510:	08 95       	ret

00000512 <Lcd4_Write_String>:
 512:	cf 93       	push	r28
 514:	df 93       	push	r29
 516:	ec 01       	movw	r28, r24
 518:	88 81       	ld	r24, Y
 51a:	88 23       	and	r24, r24
 51c:	31 f0       	breq	.+12     	; 0x52a <Lcd4_Write_String+0x18>
 51e:	21 96       	adiw	r28, 0x01	; 1
 520:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Write_Char>
 524:	89 91       	ld	r24, Y+
 526:	81 11       	cpse	r24, r1
 528:	fb cf       	rjmp	.-10     	; 0x520 <Lcd4_Write_String+0xe>
 52a:	df 91       	pop	r29
 52c:	cf 91       	pop	r28
 52e:	08 95       	ret

00000530 <UARTinitials>:
 530:	81 b3       	in	r24, 0x11	; 17
 532:	83 60       	ori	r24, 0x03	; 3
 534:	81 bb       	out	0x11, r24	; 17
 536:	88 e1       	ldi	r24, 0x18	; 24
 538:	8a b9       	out	0x0a, r24	; 10
 53a:	86 e8       	ldi	r24, 0x86	; 134
 53c:	80 bd       	out	0x20, r24	; 32
 53e:	10 bc       	out	0x20, r1	; 32
 540:	83 e3       	ldi	r24, 0x33	; 51
 542:	89 b9       	out	0x09, r24	; 9
 544:	57 9a       	sbi	0x0a, 7	; 10
 546:	78 94       	sei
 548:	08 95       	ret

0000054a <usart_data_transmit>:
 54a:	5d 9b       	sbis	0x0b, 5	; 11
 54c:	fe cf       	rjmp	.-4      	; 0x54a <usart_data_transmit>
 54e:	8c b9       	out	0x0c, r24	; 12
 550:	89 ef       	ldi	r24, 0xF9	; 249
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	01 97       	sbiw	r24, 0x01	; 1
 556:	f1 f7       	brne	.-4      	; 0x554 <usart_data_transmit+0xa>
 558:	00 c0       	rjmp	.+0      	; 0x55a <usart_data_transmit+0x10>
 55a:	00 00       	nop
 55c:	08 95       	ret

0000055e <usart_string_transmit>:
 55e:	cf 93       	push	r28
 560:	df 93       	push	r29
 562:	ec 01       	movw	r28, r24
 564:	88 81       	ld	r24, Y
 566:	88 23       	and	r24, r24
 568:	31 f0       	breq	.+12     	; 0x576 <usart_string_transmit+0x18>
 56a:	21 96       	adiw	r28, 0x01	; 1
 56c:	0e 94 a5 02 	call	0x54a	; 0x54a <usart_data_transmit>
 570:	89 91       	ld	r24, Y+
 572:	81 11       	cpse	r24, r1
 574:	fb cf       	rjmp	.-10     	; 0x56c <usart_string_transmit+0xe>
 576:	df 91       	pop	r29
 578:	cf 91       	pop	r28
 57a:	08 95       	ret

0000057c <__vector_13>:
 57c:	1f 92       	push	r1
 57e:	0f 92       	push	r0
 580:	0f b6       	in	r0, 0x3f	; 63
 582:	0f 92       	push	r0
 584:	11 24       	eor	r1, r1
 586:	8f 93       	push	r24
 588:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <Resive_data>
 58c:	8c b9       	out	0x0c, r24	; 12
 58e:	8c b1       	in	r24, 0x0c	; 12
 590:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <Resive_data>
 594:	8f 91       	pop	r24
 596:	0f 90       	pop	r0
 598:	0f be       	out	0x3f, r0	; 63
 59a:	0f 90       	pop	r0
 59c:	1f 90       	pop	r1
 59e:	18 95       	reti

000005a0 <motorOn>:
 5a0:	d8 98       	cbi	0x1b, 0	; 27
 5a2:	08 95       	ret

000005a4 <lightOn>:
 5a4:	d9 9a       	sbi	0x1b, 1	; 27
 5a6:	08 95       	ret

000005a8 <getCount>:
}

void getCount(){
	Lcd4_Clear();
 5a8:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
 5ac:	60 e0       	ldi	r22, 0x00	; 0
 5ae:	81 e0       	ldi	r24, 0x01	; 1
 5b0:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Write_String(" Tall Count : ");
 5b4:	80 e6       	ldi	r24, 0x60	; 96
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
	Lcd4_Set_Cursor(1,13);
 5bc:	6d e0       	ldi	r22, 0x0D	; 13
 5be:	81 e0       	ldi	r24, 0x01	; 1
 5c0:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Write_String(tallNum);
 5c4:	87 ec       	ldi	r24, 0xC7	; 199
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
	Lcd4_Set_Cursor(2,0);
 5cc:	60 e0       	ldi	r22, 0x00	; 0
 5ce:	82 e0       	ldi	r24, 0x02	; 2
 5d0:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Write_String("Short Count: ");
 5d4:	8f e6       	ldi	r24, 0x6F	; 111
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
	Lcd4_Set_Cursor(2,13);
 5dc:	6d e0       	ldi	r22, 0x0D	; 13
 5de:	82 e0       	ldi	r24, 0x02	; 2
 5e0:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Write_String(shortNum);
 5e4:	82 ec       	ldi	r24, 0xC2	; 194
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5ec:	87 ea       	ldi	r24, 0xA7	; 167
 5ee:	91 e6       	ldi	r25, 0x61	; 97
 5f0:	01 97       	sbiw	r24, 0x01	; 1
 5f2:	f1 f7       	brne	.-4      	; 0x5f0 <getCount+0x48>
 5f4:	00 c0       	rjmp	.+0      	; 0x5f6 <getCount+0x4e>
 5f6:	00 00       	nop
	_delay_ms(100);
	usart_string_transmit("Tall Count : ");
 5f8:	81 e6       	ldi	r24, 0x61	; 97
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	0e 94 af 02 	call	0x55e	; 0x55e <usart_string_transmit>
	usart_string_transmit(tallNum);
 600:	87 ec       	ldi	r24, 0xC7	; 199
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	0e 94 af 02 	call	0x55e	; 0x55e <usart_string_transmit>
	usart_string_transmit(" Short Count : ");
 608:	8d e7       	ldi	r24, 0x7D	; 125
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	0e 94 af 02 	call	0x55e	; 0x55e <usart_string_transmit>
	usart_string_transmit(shortNum);
 610:	82 ec       	ldi	r24, 0xC2	; 194
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	0e 94 af 02 	call	0x55e	; 0x55e <usart_string_transmit>
	usart_string_transmit("\n");
 618:	8d e8       	ldi	r24, 0x8D	; 141
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	0e 94 af 02 	call	0x55e	; 0x55e <usart_string_transmit>
	if(bit_is_clear(PINB,3)){
 620:	86 b3       	in	r24, 0x16	; 22

	}
	if(bit_is_clear(PINB,0)){
 622:	b0 99       	sbic	0x16, 0	; 22
 624:	19 c0       	rjmp	.+50     	; 0x658 <getCount+0xb0>
		while (bit_is_clear(PINB,0))
 626:	b0 99       	sbic	0x16, 0	; 22
 628:	08 c0       	rjmp	.+16     	; 0x63a <getCount+0x92>
 62a:	89 ef       	ldi	r24, 0xF9	; 249
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	01 97       	sbiw	r24, 0x01	; 1
 630:	f1 f7       	brne	.-4      	; 0x62e <getCount+0x86>
 632:	00 c0       	rjmp	.+0      	; 0x634 <getCount+0x8c>
 634:	00 00       	nop
 636:	b0 9b       	sbis	0x16, 0	; 22
 638:	f8 cf       	rjmp	.-16     	; 0x62a <getCount+0x82>
		{
			_delay_ms(1);
		}
		tallCount++;
 63a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <tallCount>
 63e:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <tallCount+0x1>
 642:	01 96       	adiw	r24, 0x01	; 1
 644:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <tallCount+0x1>
 648:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <tallCount>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 64c:	4a e0       	ldi	r20, 0x0A	; 10
 64e:	67 ec       	ldi	r22, 0xC7	; 199
 650:	70 e0       	ldi	r23, 0x00	; 0
 652:	0e 94 9c 03 	call	0x738	; 0x738 <__itoa_ncheck>
 656:	08 95       	ret
		itoa(tallCount, tallNum, 10);
		
	}else if (bit_is_clear(PINB, 1)){
 658:	b1 99       	sbic	0x16, 1	; 22
 65a:	18 c0       	rjmp	.+48     	; 0x68c <getCount+0xe4>
		while (bit_is_clear(PINB,1))
 65c:	b1 99       	sbic	0x16, 1	; 22
 65e:	08 c0       	rjmp	.+16     	; 0x670 <getCount+0xc8>
 660:	89 ef       	ldi	r24, 0xF9	; 249
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	01 97       	sbiw	r24, 0x01	; 1
 666:	f1 f7       	brne	.-4      	; 0x664 <getCount+0xbc>
 668:	00 c0       	rjmp	.+0      	; 0x66a <getCount+0xc2>
 66a:	00 00       	nop
 66c:	b1 9b       	sbis	0x16, 1	; 22
 66e:	f8 cf       	rjmp	.-16     	; 0x660 <getCount+0xb8>
		{
			_delay_ms(1);
		}
		shortCount++;
 670:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <__data_end>
 674:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <__data_end+0x1>
 678:	01 96       	adiw	r24, 0x01	; 1
 67a:	90 93 bf 00 	sts	0x00BF, r25	; 0x8000bf <__data_end+0x1>
 67e:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <__data_end>
 682:	4a e0       	ldi	r20, 0x0A	; 10
 684:	62 ec       	ldi	r22, 0xC2	; 194
 686:	70 e0       	ldi	r23, 0x00	; 0
 688:	0e 94 9c 03 	call	0x738	; 0x738 <__itoa_ncheck>
 68c:	08 95       	ret

0000068e <main>:

int main(void)
{
	
	// Enable C ports.
	MCUCSR = (1<<JTD);
 68e:	80 e8       	ldi	r24, 0x80	; 128
 690:	84 bf       	out	0x34, r24	; 52
	MCUCSR = (1<<JTD);
 692:	84 bf       	out	0x34, r24	; 52
	DDRC = 0xff;
 694:	8f ef       	ldi	r24, 0xFF	; 255
 696:	84 bb       	out	0x14, r24	; 20
	DDRA = 0xff;
 698:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0x00;
 69a:	17 ba       	out	0x17, r1	; 23
	PORTA = 0b00000001;
 69c:	91 e0       	ldi	r25, 0x01	; 1
 69e:	9b bb       	out	0x1b, r25	; 27
	PORTD = 0xff;
 6a0:	82 bb       	out	0x12, r24	; 18
	UARTinitials();
 6a2:	0e 94 98 02 	call	0x530	; 0x530 <UARTinitials>
	usart_string_transmit("UART INIT...");
 6a6:	8f e8       	ldi	r24, 0x8F	; 143
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	0e 94 af 02 	call	0x55e	; 0x55e <usart_string_transmit>
	usart_string_transmit("\n");
 6ae:	8d e8       	ldi	r24, 0x8D	; 141
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	0e 94 af 02 	call	0x55e	; 0x55e <usart_string_transmit>
	Lcd4_Init();
 6b6:	0e 94 12 02 	call	0x424	; 0x424 <Lcd4_Init>
	Lcd4_Clear();
 6ba:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
 6be:	60 e0       	ldi	r22, 0x00	; 0
 6c0:	81 e0       	ldi	r24, 0x01	; 1
 6c2:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Write_String("   Welcome!!!   ");
 6c6:	8c e9       	ldi	r24, 0x9C	; 156
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
 6ce:	2f e7       	ldi	r18, 0x7F	; 127
 6d0:	84 e8       	ldi	r24, 0x84	; 132
 6d2:	9e e1       	ldi	r25, 0x1E	; 30
 6d4:	21 50       	subi	r18, 0x01	; 1
 6d6:	80 40       	sbci	r24, 0x00	; 0
 6d8:	90 40       	sbci	r25, 0x00	; 0
 6da:	e1 f7       	brne	.-8      	; 0x6d4 <main+0x46>
 6dc:	00 c0       	rjmp	.+0      	; 0x6de <main+0x50>
 6de:	00 00       	nop
	_delay_ms(10000);
	Lcd4_Clear();
 6e0:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
 6e4:	60 e0       	ldi	r22, 0x00	; 0
 6e6:	81 e0       	ldi	r24, 0x01	; 1
 6e8:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Write_String("    Power On    ");
 6ec:	8d ea       	ldi	r24, 0xAD	; 173
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
	lightOn();
 6f4:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <lightOn>
 6f8:	2f e7       	ldi	r18, 0x7F	; 127
 6fa:	84 e8       	ldi	r24, 0x84	; 132
 6fc:	9e e1       	ldi	r25, 0x1E	; 30
 6fe:	21 50       	subi	r18, 0x01	; 1
 700:	80 40       	sbci	r24, 0x00	; 0
 702:	90 40       	sbci	r25, 0x00	; 0
 704:	e1 f7       	brne	.-8      	; 0x6fe <main+0x70>
 706:	00 c0       	rjmp	.+0      	; 0x708 <main+0x7a>
 708:	00 00       	nop
	_delay_ms(10000);
	motorOn();
 70a:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <motorOn>
 70e:	4a e0       	ldi	r20, 0x0A	; 10
 710:	67 ec       	ldi	r22, 0xC7	; 199
 712:	70 e0       	ldi	r23, 0x00	; 0
 714:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <tallCount>
 718:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <tallCount+0x1>
 71c:	0e 94 9c 03 	call	0x738	; 0x738 <__itoa_ncheck>
 720:	4a e0       	ldi	r20, 0x0A	; 10
 722:	62 ec       	ldi	r22, 0xC2	; 194
 724:	70 e0       	ldi	r23, 0x00	; 0
 726:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <__data_end>
 72a:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <__data_end+0x1>
 72e:	0e 94 9c 03 	call	0x738	; 0x738 <__itoa_ncheck>
	itoa(tallCount, tallNum, 10);
	itoa(shortCount, shortNum, 10);
	
    while (1)
    {
		getCount();
 732:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <getCount>
 736:	fd cf       	rjmp	.-6      	; 0x732 <main+0xa4>

00000738 <__itoa_ncheck>:
 738:	bb 27       	eor	r27, r27
 73a:	4a 30       	cpi	r20, 0x0A	; 10
 73c:	31 f4       	brne	.+12     	; 0x74a <__itoa_ncheck+0x12>
 73e:	99 23       	and	r25, r25
 740:	22 f4       	brpl	.+8      	; 0x74a <__itoa_ncheck+0x12>
 742:	bd e2       	ldi	r27, 0x2D	; 45
 744:	90 95       	com	r25
 746:	81 95       	neg	r24
 748:	9f 4f       	sbci	r25, 0xFF	; 255
 74a:	0c 94 a8 03 	jmp	0x750	; 0x750 <__utoa_common>

0000074e <__utoa_ncheck>:
 74e:	bb 27       	eor	r27, r27

00000750 <__utoa_common>:
 750:	fb 01       	movw	r30, r22
 752:	55 27       	eor	r21, r21
 754:	aa 27       	eor	r26, r26
 756:	88 0f       	add	r24, r24
 758:	99 1f       	adc	r25, r25
 75a:	aa 1f       	adc	r26, r26
 75c:	a4 17       	cp	r26, r20
 75e:	10 f0       	brcs	.+4      	; 0x764 <__utoa_common+0x14>
 760:	a4 1b       	sub	r26, r20
 762:	83 95       	inc	r24
 764:	50 51       	subi	r21, 0x10	; 16
 766:	b9 f7       	brne	.-18     	; 0x756 <__utoa_common+0x6>
 768:	a0 5d       	subi	r26, 0xD0	; 208
 76a:	aa 33       	cpi	r26, 0x3A	; 58
 76c:	08 f0       	brcs	.+2      	; 0x770 <__utoa_common+0x20>
 76e:	a9 5d       	subi	r26, 0xD9	; 217
 770:	a1 93       	st	Z+, r26
 772:	00 97       	sbiw	r24, 0x00	; 0
 774:	79 f7       	brne	.-34     	; 0x754 <__utoa_common+0x4>
 776:	b1 11       	cpse	r27, r1
 778:	b1 93       	st	Z+, r27
 77a:	11 92       	st	Z+, r1
 77c:	cb 01       	movw	r24, r22
 77e:	0c 94 c1 03 	jmp	0x782	; 0x782 <strrev>

00000782 <strrev>:
 782:	dc 01       	movw	r26, r24
 784:	fc 01       	movw	r30, r24
 786:	67 2f       	mov	r22, r23
 788:	71 91       	ld	r23, Z+
 78a:	77 23       	and	r23, r23
 78c:	e1 f7       	brne	.-8      	; 0x786 <strrev+0x4>
 78e:	32 97       	sbiw	r30, 0x02	; 2
 790:	04 c0       	rjmp	.+8      	; 0x79a <strrev+0x18>
 792:	7c 91       	ld	r23, X
 794:	6d 93       	st	X+, r22
 796:	70 83       	st	Z, r23
 798:	62 91       	ld	r22, -Z
 79a:	ae 17       	cp	r26, r30
 79c:	bf 07       	cpc	r27, r31
 79e:	c8 f3       	brcs	.-14     	; 0x792 <strrev+0x10>
 7a0:	08 95       	ret

000007a2 <_exit>:
 7a2:	f8 94       	cli

000007a4 <__stop_program>:
 7a4:	ff cf       	rjmp	.-2      	; 0x7a4 <__stop_program>
